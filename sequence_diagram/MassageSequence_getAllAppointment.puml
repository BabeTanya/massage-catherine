@startuml Get All Appointments (GET)

header Sameple Massage Shop Sequence Diagram
footer Page %page% of %lastpage%
title "Get All Appointments (GET)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:appointments" as routerAppointments
participant "<<middleware>>\n:auth" as middleware
participant "<<service>>\n:jwt" as service
participant "<<controllers>>\n:appointments" as controllersAppointments
participant "<<model>>\n:User" as modelUser
participant "<<model>>\n:appointment" as modelAppointment
database "<<MongoDB>>\n:users" as UsersDatabase
database "<<MongoDB>>\n:appointments" as AppointmentsDatabase

client->server ++:req.get('/appointments')
server->routerAppointments ++:app.use('/appointments', appointments)
routerAppointments -> middleware ++:protect()
middleware -> service ++:verify(token, secret)
middleware <-- service ++:decoded
middleware -> modelUser ++:findById(decoded id)
modelUser -> UsersDatabase ++:findById({_id:decoded id})
modelUser <-- UsersDatabase ++:user
middleware <-- modelUser ++:user
routerAppointments <-- middleware ++:user
routerAppointments -> controllersAppointments ++:getAppointments()
alt User is not admin role
  alt Params have massage shop id
    controllersAppointments->modelAppointment: find(req.user.id,req.params.massageShopId)
    modelAppointment ->AppointmentsDatabase ++: AppointmentSchema
    AppointmentsDatabase --> modelAppointment --: appointments
    controllersAppointments <-- modelAppointment --:appointments
    client <-- controllersAppointments --:response
  else not have massage shop id
    controllersAppointments->modelAppointment: find(req.user.id)
    modelAppointment ->AppointmentsDatabase ++: AppointmentSchema
    AppointmentsDatabase --> modelAppointment --: appointments
    controllersAppointments <-- modelAppointment --:appointments
    client <-- controllersAppointments --:response
  end
else User is admin role
  alt Params have massage shop id
    controllersAppointments->modelAppointment: find(req.params.massageShopId)
    modelAppointment ->AppointmentsDatabase ++: AppointmentSchema
    AppointmentsDatabase --> modelAppointment --: appointments
    controllersAppointments <-- modelAppointment --:appointments
    client <-- controllersAppointments --:response
  else not have massage shop id
    controllersAppointments->modelAppointment: find()
    modelAppointment ->AppointmentsDatabase ++: AppointmentSchema
    AppointmentsDatabase --> modelAppointment --: appointments
    controllersAppointments <-- modelAppointment --:appointments
    client <-- controllersAppointments --:response
  end
end

@enduml
